import com.google.gson.Gson
import com.google.gson.JsonElement
import com.google.gson.JsonObject
import net.fabricmc.loom.LoomGradlePlugin

buildscript {
	repositories {
		mavenCentral()
		maven {
			name = 'Fabric'
			url = 'http://maven.modmuss50.me/'
		}
		maven {
			name = 'mojang'
			url = 'https://libraries.minecraft.net/'
		}
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.0.13-SNAPSHOT'
	}
}

plugins {
	id 'java'
	id 'maven'

	id 'idea'
	id 'eclipse'
}
apply plugin: LoomGradlePlugin

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = modid

// Fetch build number from Jenkins
def build = "local"
def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	build = ENV.BUILD_NUMBER
}
version = version + "." + build

repositories {
	mavenCentral()
	jcenter()
	maven {
		name = 'Fabric'
		url = 'http://maven.modmuss50.me/'
	}
	maven {
		name = 'SpongePowered'
		url = 'http://repo.spongepowered.org/maven'
	}
	maven {
		name = 'mojang'
		url = 'https://libraries.minecraft.net/'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:" + minecraft_version
	mappings "net.fabricmc:pomf:18w44a.38"

	compile "com.github.zafarkhaja:java-semver:0.9.0"
	compile 'com.google.code.findbugs:jsr305:3.0.2'
	compile 'org.ow2.asm:asm:7.0'
	compile 'org.ow2.asm:asm-commons:7.0'
	compile 'org.ow2.asm:asm-tree:7.0'
	compile 'org.ow2.asm:asm-util:7.0'

	compile('net.fabricmc:sponge-mixin:0.7.11.3') {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
	}
	compile 'net.fabricmc:tiny-remapper:0.1.0.16'

	// Mojang
	compile ('net.minecraft:launchwrapper:1.12') {
		transitive = false
	}
	compile 'com.mojang:authlib:1.5.25'
	compile 'net.sf.jopt-simple:jopt-simple:5.0.3'
}

jar {
	manifest {
		attributes(
			'Minecraft-Version': minecraft_version,
			'Main-Class': 'net.fabricmc.loader.launch.FabricServerLauncher',
			'Class-Path': 'minecraft_server.' + minecraft_version + '.jar' + getClasspathEntries()
		)
	}
}

task copyJson(type: Copy, dependsOn: ["remapJar"]) {
	from('src/main/resources/fabric-installer.json') {
		rename { "${archivesBaseName}-${version}.json" }
	}
	into 'build/libs'
}

tasks.build.dependsOn "copyJson"

task wrapper(type: Wrapper) {
	gradleVersion = '4.10.2'
}

String getClasspathEntries(){
	String classPath = ""
	File installerFile = file("src/main/resources/fabric-installer.json")
	JsonObject object = Gson.newInstance().fromJson(new InputStreamReader(new FileInputStream(installerFile)), JsonObject.class)

	["common", "server"].forEach { l ->
		for (JsonElement element : object.getAsJsonObject("libraries").getAsJsonArray(l)) {
			String dep = element.getAsJsonObject().get("name").getAsString()
			String[] depSplit = dep.split(":")
			if (depSplit.length != 3) throw new RuntimeException("Invalid dependency " + dep);
			classPath = classPath + " libs/" + depSplit[1] + "-" + depSplit[2] + ".jar"
		}
	}

	return classPath;
}

artifacts {
	archives file("src/main/resources/fabric-installer.json")
}

apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/maven.gradle'
apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/license.gradle'
apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/ideconfig.gradle'
